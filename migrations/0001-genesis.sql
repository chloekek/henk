-- migrate:up

CREATE TABLE "user"
  ( id      BIGINT      NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
  , created TIMESTAMPTZ NOT NULL DEFAULT now()
  );

-- Users have a username, which can be changed. We keep all historical ones, the
-- current one is the one with the greatest id.
CREATE TABLE "user_name"
  ( id      BIGINT      NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
  , user_id BIGINT      NOT NULL REFERENCES "user" (id)
  , name    TEXT        NOT NULL
  , created TIMESTAMPTZ NOT NULL DEFAULT now()
  );

-- Usernames must be unique, not just across the set of current usernames, but
-- across all usernames ever. If somebody used a name in the past, even if they
-- are no longer using it, it cannot be recycled.
CREATE UNIQUE INDEX ix_user_name_unique ON user_name (name);

-- Facilitate getting a user's current username.
CREATE INDEX ix_user_name_user_id_id ON user_name (user_id, id);
CREATE FUNCTION user_current_name(bigint)
    RETURNS text
    LANGUAGE SQL
    STABLE
    RETURNS NULL ON NULL INPUT
    PARALLEL SAFE
    AS $$
        SELECT name
        FROM user_name
        WHERE user_id = $1
        ORDER BY id DESC
        LIMIT 1
    $$;

-- migrate:down

DROP FUNCTION user_current_name;
DROP TABLE "user";
